default:
  image: node:lts

cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - node_modules/

stages:
  - test
  - build
  - upload

include:
  - template: Security/License-Scanning.gitlab-ci.yml
  - template: Security/Secret-Detection.gitlab-ci.yml

.version_number: &version_number
  - export VERSION_NUMBER=$(git show -s --format=%cd --date=format:'%Y.%m.%d' ${CI_COMMIT_SHA})
  - echo $VERSION_NUMBER

.prepare_npm: &prepare_npm
  - NPM_PACKAGE_NAME=$(node -p "require('./package.json').name")
  - NPM_PACKAGE_VERSION=$(node -p "require('./package.json').version")
  - echo //gitlab.com/api/v4/packages/npm/:_authToken=${CI_JOB_TOKEN} >> .npmrc

lint:
  stage: test
  before_script:
    - *prepare_npm
  script:
    - npm install --progress=false
    - npm run lint

build:
  stage: build
  needs:
    - lint
  before_script:
    - *prepare_npm
  script:
    - npm install --progress=false
    - npm run build
  artifacts:
    paths:
      - dist/

upload_docker:
  image: docker:git
  stage: upload
  needs:
    - build
  dependencies:
    - build
  services:
    - name: docker:dind
  before_script:
    - *version_number
    - docker login -u "${CI_REGISTRY_USER}" -p "${CI_REGISTRY_PASSWORD}" ${CI_REGISTRY}
    - docker info
  script:
    - ls -hal dist/
    - docker build -t ${CI_REGISTRY_IMAGE}:${VERSION_NUMBER} -t ${CI_REGISTRY_IMAGE}:latest .
    - docker push ${CI_REGISTRY_IMAGE}:${VERSION_NUMBER}
    - docker push ${CI_REGISTRY_IMAGE}:latest
  only:
    refs:
      - /^.*-release$/
